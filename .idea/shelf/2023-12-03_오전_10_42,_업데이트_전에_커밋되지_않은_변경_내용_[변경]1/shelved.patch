Index: cyworld_01/src/main/java/org/example/BoardList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class BoardList {\r\n    public BoardList() {\r\n        JFrame boardFrame = new JFrame(\"게시판 목록\");\r\n        boardFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n        boardFrame.setSize(800, 600);\r\n        boardFrame.setLayout(new BorderLayout());\r\n\r\n        JPanel boardPanel = new JPanel();\r\n        boardPanel.setLayout(new BoxLayout(boardPanel, BoxLayout.Y_AXIS)); // 상하로 정렬되는 레이아웃\r\n\r\n        // 데이터베이스 연결 정보\r\n        String url = \"jdbc:mysql://cyworld.cji1ftocbium.ap-northeast-2.rds.amazonaws.com:3306/cyworld\";\r\n        String username = \"tkv00\";\r\n        String password = \"rlaehdus00\";\r\n\r\n        // 데이터베이스 연결\r\n        try (Connection connection = DriverManager.getConnection(url, username, password)) {\r\n            String sql = \"SELECT WriteBoardNum, userId, title FROM WriteBoard\"; // 게시글을 가져오는 쿼리문 (테이블 이름에 맞게 수정 필요)\r\n            PreparedStatement statement = connection.prepareStatement(sql);\r\n            ResultSet resultSet = statement.executeQuery();\r\n\r\n            // 데이터베이스에서 가져온 결과를 이용하여 버튼 생성\r\n            while (resultSet.next()) {\r\n                int userId = resultSet.getInt(\"userId\"); // 게시글 ID 컬럼에 맞게 수정 필요\r\n                String postTitle = resultSet.getString(\"title\"); // 게시글 제목 컬럼에 맞게 수정 필요\r\n                int WriteBoardNum = resultSet.getInt(\"WriteBoardNum\");\r\n\r\n                JButton postButton = new JButton(WriteBoardNum + \". 게시글 작성자: \" + userId + \" / 제목: \" + postTitle);\r\n                postButton.addActionListener(e -> {\r\n                    // 버튼 클릭 시 해당 게시글을 보여주는 동작 수행\r\n                    // postId 등을 이용하여 해당 게시글을 가져오는 로직 구현\r\n                    // 여기에 필요한 처리를 추가하세요\r\n                    JOptionPane.showMessageDialog(null, \"게시글 작성자: \" + userId + \"\\n게시글 제목: \" + postTitle);\r\n                });\r\n\r\n                boardPanel.add(postButton);\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            // 데이터베이스 연결 실패 또는 쿼리 실행 중 오류가 발생한 경우 처리\r\n        }\r\n\r\n        JScrollPane scrollPane = new JScrollPane(boardPanel);\r\n        boardFrame.add(scrollPane, BorderLayout.CENTER);\r\n\r\n        boardFrame.setVisible(true);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cyworld_01/src/main/java/org/example/BoardList.java b/cyworld_01/src/main/java/org/example/BoardList.java
--- a/cyworld_01/src/main/java/org/example/BoardList.java	
+++ b/cyworld_01/src/main/java/org/example/BoardList.java	
@@ -1,9 +1,14 @@
 package org.example;
 
+import org.example.DatabaseConfig;
+
 import javax.swing.*;
+import javax.swing.border.EmptyBorder;
+import javax.swing.border.LineBorder;
 import java.awt.*;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
 import java.sql.Connection;
-import java.sql.DriverManager;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
@@ -14,36 +19,50 @@
         boardFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
         boardFrame.setSize(800, 600);
         boardFrame.setLayout(new BorderLayout());
+        JButton createPostButton = new JButton("게시글 작성");
+        createPostButton.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                // 게시판 작성 클래스로 이동
+                new WriteBoard();
+            }
+        });
+        JPanel topPanel = new JPanel(); // 패널 생성
+        topPanel.setLayout(new FlowLayout(FlowLayout.RIGHT)); // 패널에 레이아웃 설정
+        topPanel.add(createPostButton); // 패널에 버튼 추가
+
+        boardFrame.add(topPanel, BorderLayout.NORTH); // 프레임에 패널 추가
+
+
+
+
+
 
         JPanel boardPanel = new JPanel();
         boardPanel.setLayout(new BoxLayout(boardPanel, BoxLayout.Y_AXIS)); // 상하로 정렬되는 레이아웃
 
-        // 데이터베이스 연결 정보
-        String url = "jdbc:mysql://cyworld.cji1ftocbium.ap-northeast-2.rds.amazonaws.com:3306/cyworld";
-        String username = "tkv00";
-        String password = "rlaehdus00";
-
         // 데이터베이스 연결
-        try (Connection connection = DriverManager.getConnection(url, username, password)) {
-            String sql = "SELECT WriteBoardNum, userId, title FROM WriteBoard"; // 게시글을 가져오는 쿼리문 (테이블 이름에 맞게 수정 필요)
+        try (Connection connection = DatabaseConfig.getConnection()) {
+            String sql = "SELECT WriteBoardNum, userId, time,title  FROM WriteBoard"; // 게시글을 가져오는 쿼리문 (테이블 이름에 맞게 수정 필요)
             PreparedStatement statement = connection.prepareStatement(sql);
             ResultSet resultSet = statement.executeQuery();
 
             // 데이터베이스에서 가져온 결과를 이용하여 버튼 생성
             while (resultSet.next()) {
-                int userId = resultSet.getInt("userId"); // 게시글 ID 컬럼에 맞게 수정 필요
+                String userId = resultSet.getString("userId"); // 게시글 작성자 ID 컬럼에 맞게 수정 필요
                 String postTitle = resultSet.getString("title"); // 게시글 제목 컬럼에 맞게 수정 필요
                 int WriteBoardNum = resultSet.getInt("WriteBoardNum");
+                String time=resultSet.getString("time");
 
-                JButton postButton = new JButton(WriteBoardNum + ". 게시글 작성자: " + userId + " / 제목: " + postTitle);
+                JButton postButton = new JButton(WriteBoardNum + ". 게시글 작성자: " + userId + " / 제목: " + postTitle+"   "+time);
                 postButton.addActionListener(e -> {
                     // 버튼 클릭 시 해당 게시글을 보여주는 동작 수행
-                    // postId 등을 이용하여 해당 게시글을 가져오는 로직 구현
-                    // 여기에 필요한 처리를 추가하세요
-                    JOptionPane.showMessageDialog(null, "게시글 작성자: " + userId + "\n게시글 제목: " + postTitle);
+                    showPostDetailsInNewWindow(WriteBoardNum);
                 });
 
                 boardPanel.add(postButton);
+                // 게시판 작성 버튼
+
             }
         } catch (SQLException e) {
             e.printStackTrace();
@@ -55,4 +74,79 @@
 
         boardFrame.setVisible(true);
     }
-}
+    // 게시글 세부 정보를 보여주는 새 창
+    private void showPostDetailsInNewWindow(int postId) {
+        JFrame detailsFrame = new JFrame("게시글 세부 정보");
+        detailsFrame.setSize(500, 400);
+        detailsFrame.setLayout(new BorderLayout());
+
+        JPanel mainPanel = new JPanel();
+        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
+
+        try (Connection connection = DatabaseConfig.getConnection()) {
+            String sql = "SELECT * FROM WriteBoard WHERE WriteBoardNum = ?";
+            PreparedStatement statement = connection.prepareStatement(sql);
+            statement.setInt(1, postId);
+            ResultSet resultSet = statement.executeQuery();
+
+            if (resultSet.next()) {
+                String postTitle = resultSet.getString("title");
+                String userId = resultSet.getString("userId");
+                String postDate = resultSet.getString("time");
+                String postContent = resultSet.getString("content");
+
+                // 제목 섹션
+                JPanel titlePanel = createSectionPanel("제목: " , postTitle);
+                mainPanel.add(titlePanel);
+
+                // 작성자 섹션
+                JPanel authorPanel = createSectionPanel("작성자: " , userId);
+                mainPanel.add(authorPanel);
+
+                // 작성 날짜 섹션
+                JPanel datePanel = createSectionPanel("작성 날짜: " , postDate);
+                mainPanel.add(datePanel);
+                // 작성 내용 섹션
+                JPanel contentPanel = createSectionPanel("작성 내용: " , postContent);
+                mainPanel.add(contentPanel);
+
+
+            }
+        } catch (SQLException e) {
+            e.printStackTrace();
+            JPanel errorPanel = createSectionPanel("게시글 세부 정보를 불러오는 데 실패했습니다.","");
+            mainPanel.add(errorPanel);
+        }
+
+        JScrollPane scrollPane = new JScrollPane(mainPanel);
+        detailsFrame.add(scrollPane, BorderLayout.CENTER);
+        detailsFrame.setVisible(true);
+    }
+    // 섹션 패널 생성 도우미 메소드
+    private JPanel createSectionPanel(String labelText, String text) {
+        JPanel panel = new JPanel(new BorderLayout());
+        panel.setBorder(new LineBorder(Color.GRAY, 1, true));
+        JLabel label = new JLabel(labelText);
+        label.setBorder(new EmptyBorder(10, 10, 10, 10)); // 상하좌우 10픽셀의 패딩을 추가합니다.
+        panel.add(label, BorderLayout.NORTH);
+
+        JTextArea textArea = new JTextArea(text);
+        textArea.setWrapStyleWord(true);
+        textArea.setLineWrap(true);
+        textArea.setEditable(false);
+        textArea.setBorder(new EmptyBorder(10, 10, 10, 10)); // 상하좌우 10픽셀의 패딩을 추가합니다.
+
+        // 내용이 길 경우 스크롤바를 자동으로 나타나게 합니다.
+        JScrollPane scrollPane = new JScrollPane(textArea);
+        panel.add(scrollPane, BorderLayout.CENTER);
+
+        return panel;
+    }
+
+
+
+
+    public static void main(String[] args) {
+        SwingUtilities.invokeLater(() -> new BoardList());
+    }
+}
\ No newline at end of file
Index: cyworld_01/src/main/java/org/example/MiniHomepage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\nimport static java.awt.AWTEventMulticaster.add;\r\n\r\npublic class MiniHomepage {\r\n    private LoginPage loginPage;\r\n    private SignUppage signUpPage;\r\n    private JLabel userIdLabel; // 사용자 ID를 표시할 레이블\r\n\r\n\r\n    public MiniHomepage() {\r\n        signUpPage = new SignUppage();\r\n        loginPage = new LoginPage(signUpPage,this);\r\n        // 사용자 ID 레이블 초기화\r\n        userIdLabel = new JLabel();\r\n        add(userIdLabel); // 이 부분은 MiniHomepage의 레이아웃에 따라 달라질 수 있음\r\n    }//\r\n\r\n    private void add(JLabel userIdLabel) {\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        new MiniHomepage().showLogin(); // 프로그램 시작 시 로그인 페이지를 표시\r\n\r\n    }//\r\n    private void showLogin() {\r\n        loginPage.show();\r\n    }\r\n    public void showMainPage(){\r\n        JFrame frame = new JFrame(\"싸이월드\");\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.setSize(1200, 900); // 창 크기 설정\r\n        frame.setLayout(new BorderLayout(15, 15));\r\n\r\n        // 배경 설정\r\n        JPanel backgroundPanel = new JPanel();\r\n        backgroundPanel.setLayout(new BorderLayout());\r\n        backgroundPanel.setBackground(new Color(163, 163, 163)); // 배경색 설정\r\n        frame.add(backgroundPanel);\r\n\r\n        // bookcover 패널\r\n        JPanel bookcoverPanel = new JPanel();\r\n        bookcoverPanel.setLayout(new BorderLayout());\r\n        bookcoverPanel.setBackground(Color.GRAY);\r\n        bookcoverPanel.setBorder(BorderFactory.createLineBorder(Color.decode(\"#738186\"), 1));\r\n        bookcoverPanel.setPreferredSize(new Dimension(960, 660));\r\n        backgroundPanel.add(bookcoverPanel, BorderLayout.CENTER);\r\n\r\n        // page 패널\r\n        JPanel pagePanel = new JPanel();\r\n        pagePanel.setLayout(new BorderLayout());\r\n        pagePanel.setBackground(Color.WHITE);\r\n        pagePanel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));\r\n        bookcoverPanel.add(pagePanel);\r\n\r\n        // 홈 섹션\r\n        JPanel homePanel = new JPanel();\r\n        homePanel.setLayout(new BorderLayout());\r\n        pagePanel.add(homePanel, BorderLayout.CENTER);\r\n\r\n        // 상단 타이틀 영역\r\n        JLabel title = new JLabel(\"싸이월드\", SwingConstants.CENTER);\r\n        title.setFont(new Font(\"Stylish\", Font.PLAIN, 25));\r\n        homePanel.add(title, BorderLayout.NORTH);\r\n\r\n        // 뉴스 섹션\r\n        JPanel newsSection = new JPanel();\r\n        newsSection.setLayout(new BoxLayout(newsSection, BoxLayout.Y_AXIS));\r\n        JLabel newsTitle = new JLabel(\"오늘의 뉴스\");\r\n        newsSection.add(newsTitle);\r\n        // 뉴스 섹션의 추가적인 구현...\r\n\r\n        // 프로필 섹션\r\n        JPanel profileSection = new JPanel();\r\n        profileSection.setLayout(new BoxLayout(profileSection, BoxLayout.Y_AXIS));\r\n        JLabel profileTitle = new JLabel(\"내 프로필\");\r\n        profileSection.add(profileTitle);\r\n        // 프로필 섹션의 추가적인 구현...\r\n\r\n        // 메뉴 바\r\n        JPanel menuBar = new JPanel();\r\n        menuBar.setLayout(new BoxLayout(menuBar, BoxLayout.Y_AXIS));\r\n        backgroundPanel.add(menuBar, BorderLayout.WEST);\r\n\r\n        // 섹션들을 메인 패널에 추가\r\n        homePanel.add(newsSection, BorderLayout.CENTER);\r\n        homePanel.add(profileSection, BorderLayout.EAST);\r\n\r\n        //게시판버튼\r\n        JButton boardButton=new JButton(\"게시판\");\r\n        boardButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                new BoardList(); // 게시판 목록 페이지 열기\r\n            }\r\n        });\r\n        menuBar.add(boardButton);\r\n\r\n        // 프레임 보이기\r\n        frame.setVisible(true);\r\n    }\r\n    // MiniHomepage 클래스 내부\r\n    public void setUserId(String userId) {\r\n        // userId를 사용하여 메인 페이지에 표시하는 로직\r\n        // 예: JLabel에 userId를 설정\r\n        userIdLabel.setText(\"Welcome, \" + userId);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cyworld_01/src/main/java/org/example/MiniHomepage.java b/cyworld_01/src/main/java/org/example/MiniHomepage.java
--- a/cyworld_01/src/main/java/org/example/MiniHomepage.java	
+++ b/cyworld_01/src/main/java/org/example/MiniHomepage.java	
@@ -11,7 +11,7 @@
     private LoginPage loginPage;
     private SignUppage signUpPage;
     private JLabel userIdLabel; // 사용자 ID를 표시할 레이블
-
+    private String username; // 사용자 id을 저장할 변수
 
     public MiniHomepage() {
         signUpPage = new SignUppage();
@@ -80,7 +80,7 @@
         profileSection.setLayout(new BoxLayout(profileSection, BoxLayout.Y_AXIS));
         JLabel profileTitle = new JLabel("내 프로필");
         profileSection.add(profileTitle);
-        // 프로필 섹션의 추가적인 구현...
+
 
         // 메뉴 바
         JPanel menuBar = new JPanel();
@@ -96,18 +96,23 @@
         boardButton.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
-                new BoardList(); // 게시판 목록 페이지 열기
+                new BoardList();
+                // 게시판 페이지 열기
             }
         });
         menuBar.add(boardButton);
 
+
         // 프레임 보이기
         frame.setVisible(true);
     }
+
     // MiniHomepage 클래스 내부
-    public void setUserId(String userId) {
+    public void setUserId(String username) {
+        this.username=username;
         // userId를 사용하여 메인 페이지에 표시하는 로직
         // 예: JLabel에 userId를 설정
-        userIdLabel.setText("Welcome, " + userId);
+        userIdLabel.setText("Welcome, " + username);
     }
+
 }
\ No newline at end of file
Index: src/main/java/org/example/BoardList.java
===================================================================
diff --git a/src/main/java/org/example/BoardList.java b/src/main/java/org/example/BoardList.java
deleted file mode 100644
--- a/src/main/java/org/example/BoardList.java	
+++ /dev/null	
@@ -1,152 +0,0 @@
-package org.example;
-
-import org.example.DatabaseConfig;
-
-import javax.swing.*;
-import javax.swing.border.EmptyBorder;
-import javax.swing.border.LineBorder;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.sql.Connection;
-import java.sql.PreparedStatement;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-
-public class BoardList {
-    public BoardList() {
-        JFrame boardFrame = new JFrame("게시판 목록");
-        boardFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
-        boardFrame.setSize(800, 600);
-        boardFrame.setLayout(new BorderLayout());
-        JButton createPostButton = new JButton("게시글 작성");
-        createPostButton.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                // 게시판 작성 클래스로 이동
-                new WriteBoard();
-            }
-        });
-        JPanel topPanel = new JPanel(); // 패널 생성
-        topPanel.setLayout(new FlowLayout(FlowLayout.RIGHT)); // 패널에 레이아웃 설정
-        topPanel.add(createPostButton); // 패널에 버튼 추가
-
-        boardFrame.add(topPanel, BorderLayout.NORTH); // 프레임에 패널 추가
-
-
-
-
-
-
-        JPanel boardPanel = new JPanel();
-        boardPanel.setLayout(new BoxLayout(boardPanel, BoxLayout.Y_AXIS)); // 상하로 정렬되는 레이아웃
-
-        // 데이터베이스 연결
-        try (Connection connection = DatabaseConfig.getConnection()) {
-            String sql = "SELECT WriteBoardNum, userId, time,title  FROM WriteBoard"; // 게시글을 가져오는 쿼리문 (테이블 이름에 맞게 수정 필요)
-            PreparedStatement statement = connection.prepareStatement(sql);
-            ResultSet resultSet = statement.executeQuery();
-
-            // 데이터베이스에서 가져온 결과를 이용하여 버튼 생성
-            while (resultSet.next()) {
-                String userId = resultSet.getString("userId"); // 게시글 작성자 ID 컬럼에 맞게 수정 필요
-                String postTitle = resultSet.getString("title"); // 게시글 제목 컬럼에 맞게 수정 필요
-                int WriteBoardNum = resultSet.getInt("WriteBoardNum");
-                String time=resultSet.getString("time");
-
-                JButton postButton = new JButton(WriteBoardNum + ". 게시글 작성자: " + userId + " / 제목: " + postTitle+"   "+time);
-                postButton.addActionListener(e -> {
-                    // 버튼 클릭 시 해당 게시글을 보여주는 동작 수행
-                    showPostDetailsInNewWindow(WriteBoardNum);
-                });
-
-                boardPanel.add(postButton);
-                // 게시판 작성 버튼
-
-            }
-        } catch (SQLException e) {
-            e.printStackTrace();
-            // 데이터베이스 연결 실패 또는 쿼리 실행 중 오류가 발생한 경우 처리
-        }
-
-        JScrollPane scrollPane = new JScrollPane(boardPanel);
-        boardFrame.add(scrollPane, BorderLayout.CENTER);
-
-        boardFrame.setVisible(true);
-    }
-    // 게시글 세부 정보를 보여주는 새 창
-    private void showPostDetailsInNewWindow(int postId) {
-        JFrame detailsFrame = new JFrame("게시글 세부 정보");
-        detailsFrame.setSize(500, 400);
-        detailsFrame.setLayout(new BorderLayout());
-
-        JPanel mainPanel = new JPanel();
-        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
-
-        try (Connection connection = DatabaseConfig.getConnection()) {
-            String sql = "SELECT * FROM WriteBoard WHERE WriteBoardNum = ?";
-            PreparedStatement statement = connection.prepareStatement(sql);
-            statement.setInt(1, postId);
-            ResultSet resultSet = statement.executeQuery();
-
-            if (resultSet.next()) {
-                String postTitle = resultSet.getString("title");
-                String userId = resultSet.getString("userId");
-                String postDate = resultSet.getString("time");
-                String postContent = resultSet.getString("content");
-
-                // 제목 섹션
-                JPanel titlePanel = createSectionPanel("제목: " , postTitle);
-                mainPanel.add(titlePanel);
-
-                // 작성자 섹션
-                JPanel authorPanel = createSectionPanel("작성자: " , userId);
-                mainPanel.add(authorPanel);
-
-                // 작성 날짜 섹션
-                JPanel datePanel = createSectionPanel("작성 날짜: " , postDate);
-                mainPanel.add(datePanel);
-                // 작성 내용 섹션
-                JPanel contentPanel = createSectionPanel("작성 내용: " , postContent);
-                mainPanel.add(contentPanel);
-
-
-            }
-        } catch (SQLException e) {
-            e.printStackTrace();
-            JPanel errorPanel = createSectionPanel("게시글 세부 정보를 불러오는 데 실패했습니다.","");
-            mainPanel.add(errorPanel);
-        }
-
-        JScrollPane scrollPane = new JScrollPane(mainPanel);
-        detailsFrame.add(scrollPane, BorderLayout.CENTER);
-        detailsFrame.setVisible(true);
-    }
-    // 섹션 패널 생성 도우미 메소드
-    private JPanel createSectionPanel(String labelText, String text) {
-        JPanel panel = new JPanel(new BorderLayout());
-        panel.setBorder(new LineBorder(Color.GRAY, 1, true));
-        JLabel label = new JLabel(labelText);
-        label.setBorder(new EmptyBorder(10, 10, 10, 10)); // 상하좌우 10픽셀의 패딩을 추가합니다.
-        panel.add(label, BorderLayout.NORTH);
-
-        JTextArea textArea = new JTextArea(text);
-        textArea.setWrapStyleWord(true);
-        textArea.setLineWrap(true);
-        textArea.setEditable(false);
-        textArea.setBorder(new EmptyBorder(10, 10, 10, 10)); // 상하좌우 10픽셀의 패딩을 추가합니다.
-
-        // 내용이 길 경우 스크롤바를 자동으로 나타나게 합니다.
-        JScrollPane scrollPane = new JScrollPane(textArea);
-        panel.add(scrollPane, BorderLayout.CENTER);
-
-        return panel;
-    }
-
-
-
-
-    public static void main(String[] args) {
-        SwingUtilities.invokeLater(() -> new BoardList());
-    }
-}
Index: src/main/java/org/example/MiniHomepage.java
===================================================================
diff --git a/src/main/java/org/example/MiniHomepage.java b/src/main/java/org/example/MiniHomepage.java
deleted file mode 100644
--- a/src/main/java/org/example/MiniHomepage.java	
+++ /dev/null	
@@ -1,115 +0,0 @@
-package org.example;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-import static java.awt.AWTEventMulticaster.add;
-
-public class MiniHomepage {
-    private LoginPage loginPage;
-    private SignUppage signUpPage;
-    private JLabel userIdLabel; // 사용자 ID를 표시할 레이블
-    private String username; // 사용자 id을 저장할 변수
-
-    public MiniHomepage() {
-        signUpPage = new SignUppage();
-        loginPage = new LoginPage(signUpPage,this);
-        // 사용자 ID 레이블 초기화
-        userIdLabel = new JLabel();
-        add(userIdLabel); // 이 부분은 MiniHomepage의 레이아웃에 따라 달라질 수 있음
-    }//
-
-    private void add(JLabel userIdLabel) {
-    }
-
-    public static void main(String[] args) {
-        new MiniHomepage().showLogin(); // 프로그램 시작 시 로그인 페이지를 표시
-
-    }//
-    private void showLogin() {
-        loginPage.show();
-    }
-    public void showMainPage(){
-        JFrame frame = new JFrame("싸이월드");
-        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-        frame.setSize(1200, 900); // 창 크기 설정
-        frame.setLayout(new BorderLayout(15, 15));
-
-        // 배경 설정
-        JPanel backgroundPanel = new JPanel();
-        backgroundPanel.setLayout(new BorderLayout());
-        backgroundPanel.setBackground(new Color(163, 163, 163)); // 배경색 설정
-        frame.add(backgroundPanel);
-
-        // bookcover 패널
-        JPanel bookcoverPanel = new JPanel();
-        bookcoverPanel.setLayout(new BorderLayout());
-        bookcoverPanel.setBackground(Color.GRAY);
-        bookcoverPanel.setBorder(BorderFactory.createLineBorder(Color.decode("#738186"), 1));
-        bookcoverPanel.setPreferredSize(new Dimension(960, 660));
-        backgroundPanel.add(bookcoverPanel, BorderLayout.CENTER);
-
-        // page 패널
-        JPanel pagePanel = new JPanel();
-        pagePanel.setLayout(new BorderLayout());
-        pagePanel.setBackground(Color.WHITE);
-        pagePanel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
-        bookcoverPanel.add(pagePanel);
-
-        // 홈 섹션
-        JPanel homePanel = new JPanel();
-        homePanel.setLayout(new BorderLayout());
-        pagePanel.add(homePanel, BorderLayout.CENTER);
-
-        // 상단 타이틀 영역
-        JLabel title = new JLabel("싸이월드", SwingConstants.CENTER);
-        title.setFont(new Font("Stylish", Font.PLAIN, 25));
-        homePanel.add(title, BorderLayout.NORTH);
-
-        // 뉴스 섹션
-        JPanel newsSection = new JPanel();
-        newsSection.setLayout(new BoxLayout(newsSection, BoxLayout.Y_AXIS));
-        JLabel newsTitle = new JLabel("오늘의 뉴스");
-        newsSection.add(newsTitle);
-        // 뉴스 섹션의 추가적인 구현...
-
-        // 프로필 섹션
-        JPanel profileSection = new JPanel();
-        profileSection.setLayout(new BoxLayout(profileSection, BoxLayout.Y_AXIS));
-        JLabel profileTitle = new JLabel("내 프로필");
-        profileSection.add(profileTitle);
-        // 프로필 섹션의 추가적인 구현...
-
-        // 메뉴 바
-        JPanel menuBar = new JPanel();
-        menuBar.setLayout(new BoxLayout(menuBar, BoxLayout.Y_AXIS));
-        backgroundPanel.add(menuBar, BorderLayout.WEST);
-
-        // 섹션들을 메인 패널에 추가
-        homePanel.add(newsSection, BorderLayout.CENTER);
-        homePanel.add(profileSection, BorderLayout.EAST);
-
-        //게시판버튼
-        JButton boardButton=new JButton("게시판");
-        boardButton.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                new WriteBoard(username);
-                // 게시판 페이지 열기
-            }
-        });
-        menuBar.add(boardButton);
-
-        // 프레임 보이기
-        frame.setVisible(true);
-    }
-    // MiniHomepage 클래스 내부
-    public void setUserId(String username) {
-        this.username=username;
-        // userId를 사용하여 메인 페이지에 표시하는 로직
-        // 예: JLabel에 userId를 설정
-        userIdLabel.setText("Welcome, " + username);
-    }
-}
\ No newline at end of file
